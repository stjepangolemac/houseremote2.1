"use strict";
var settings_1 = require("./classes/settings");
var logger_1 = require("./classes/logger");
var eventSystem_1 = require("./classes/eventSystem");
var deviceSchema_1 = require("./classes/deviceSchema");
var userSchema_1 = require("./classes/userSchema");
var dataManager_1 = require("./classes/dataManager");
var controller_1 = require("./classes/controller");
var controllerManager_1 = require("./classes/controllerManager");
var httpsServer_1 = require("./classes/httpsServer");
var tokenManager_1 = require("./classes/tokenManager");
var inversify_1 = require("inversify");
var kernel = new inversify_1.Kernel();
kernel.bind("Settings").to(settings_1.default).inSingletonScope();
kernel.bind("Logger").to(logger_1.default).inSingletonScope();
kernel.bind("EventSystem").to(eventSystem_1.default)
    .inSingletonScope();
kernel.bind("Schemas").to(deviceSchema_1.default);
kernel.bind("Schemas").to(userSchema_1.default);
kernel.bind("DataManager").to(dataManager_1.default)
    .inSingletonScope();
kernel.bind("Factory<Controller>")
    .toFactory(function (context) {
    return function () {
        return context.kernel.get("Controller");
    };
});
kernel.bind("Controller").to(controller_1.default);
kernel.bind("TokenManager").to(tokenManager_1.default)
    .inSingletonScope();
kernel.bind("ControllerManager")
    .to(controllerManager_1.default).inSingletonScope();
kernel.bind("HTTPSServer").to(httpsServer_1.default)
    .inSingletonScope();
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = kernel;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NvdXJjZS9pbnZlcnNpZnkuY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFLQSx5QkFBcUIsb0JBQW9CLENBQUMsQ0FBQTtBQUMxQyx1QkFBbUIsa0JBQWtCLENBQUMsQ0FBQTtBQUN0Qyw0QkFBd0IsdUJBQXVCLENBQUMsQ0FBQTtBQUNoRCw2QkFBeUIsd0JBQXdCLENBQUMsQ0FBQTtBQUNsRCwyQkFBdUIsc0JBQXNCLENBQUMsQ0FBQTtBQUM5Qyw0QkFBd0IsdUJBQXVCLENBQUMsQ0FBQTtBQUNoRCwyQkFBdUIsc0JBQXNCLENBQUMsQ0FBQTtBQUM5QyxrQ0FBOEIsNkJBQTZCLENBQUMsQ0FBQTtBQUM1RCw0QkFBd0IsdUJBQXVCLENBQUMsQ0FBQTtBQUNoRCw2QkFBeUIsd0JBQXdCLENBQUMsQ0FBQTtBQUtsRCwwQkFBdUIsV0FBVyxDQUFDLENBQUE7QUFLbkMsSUFBSSxNQUFNLEdBQUcsSUFBSSxrQkFBTSxFQUFFLENBQUM7QUFDMUIsTUFBTSxDQUFDLElBQUksQ0FBdUIsVUFBVSxDQUFDLENBQUMsRUFBRSxDQUFDLGtCQUFRLENBQUMsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0FBQzlFLE1BQU0sQ0FBQyxJQUFJLENBQXFCLFFBQVEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxnQkFBTSxDQUFDLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztBQUN4RSxNQUFNLENBQUMsSUFBSSxDQUEwQixhQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMscUJBQVcsQ0FBQztLQUNsRSxnQkFBZ0IsRUFBRSxDQUFDO0FBQ3BCLE1BQU0sQ0FBQyxJQUFJLENBQXFCLFNBQVMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxzQkFBWSxDQUFDLENBQUM7QUFDNUQsTUFBTSxDQUFDLElBQUksQ0FBcUIsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLG9CQUFVLENBQUMsQ0FBQztBQUMxRCxNQUFNLENBQUMsSUFBSSxDQUEwQixhQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMscUJBQVcsQ0FBQztLQUNsRSxnQkFBZ0IsRUFBRSxDQUFDO0FBYXBCLE1BQU0sQ0FBQyxJQUFJLENBQStCLHFCQUFxQixDQUFDO0tBQy9ELFNBQVMsQ0FBeUIsVUFBQyxPQUFPO0lBQ3ZDLE1BQU0sQ0FBQztRQUNILE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBeUIsWUFBWSxDQUFDLENBQUM7SUFDcEUsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDLENBQUM7QUFDSCxNQUFNLENBQUMsSUFBSSxDQUF5QixZQUFZLENBQUMsQ0FBQyxFQUFFLENBQUMsb0JBQVUsQ0FBQyxDQUFDO0FBRWpFLE1BQU0sQ0FBQyxJQUFJLENBQTJCLGNBQWMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxzQkFBWSxDQUFDO0tBQ3JFLGdCQUFnQixFQUFFLENBQUM7QUFDcEIsTUFBTSxDQUFDLElBQUksQ0FBZ0MsbUJBQW1CLENBQUM7S0FDOUQsRUFBRSxDQUFDLDJCQUFpQixDQUFDLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztBQUMxQyxNQUFNLENBQUMsSUFBSSxDQUEwQixhQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMscUJBQVcsQ0FBQztLQUNsRSxnQkFBZ0IsRUFBRSxDQUFDO0FBRXBCO2tCQUFlLE1BQU0sQ0FBQyIsImZpbGUiOiJpbnZlcnNpZnkuY29uZmlnLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgSU5URVJGQUNFUyBmcm9tIFwiLi9pbnRlcmZhY2VzXCI7XG5cbi8qKlxuICogSW1wb3J0IGFsbCBjbGFzc2VzIGhlcmVcbiAqL1xuaW1wb3J0IFNldHRpbmdzIGZyb20gXCIuL2NsYXNzZXMvc2V0dGluZ3NcIjtcbmltcG9ydCBMb2dnZXIgZnJvbSBcIi4vY2xhc3Nlcy9sb2dnZXJcIjtcbmltcG9ydCBFdmVudFN5c3RlbSBmcm9tIFwiLi9jbGFzc2VzL2V2ZW50U3lzdGVtXCI7XG5pbXBvcnQgRGV2aWNlU2NoZW1hIGZyb20gXCIuL2NsYXNzZXMvZGV2aWNlU2NoZW1hXCI7XG5pbXBvcnQgVXNlclNjaGVtYSBmcm9tIFwiLi9jbGFzc2VzL3VzZXJTY2hlbWFcIjtcbmltcG9ydCBEYXRhTWFuYWdlciBmcm9tIFwiLi9jbGFzc2VzL2RhdGFNYW5hZ2VyXCI7XG5pbXBvcnQgQ29udHJvbGxlciBmcm9tIFwiLi9jbGFzc2VzL2NvbnRyb2xsZXJcIjtcbmltcG9ydCBDb250cm9sbGVyTWFuYWdlciBmcm9tIFwiLi9jbGFzc2VzL2NvbnRyb2xsZXJNYW5hZ2VyXCI7XG5pbXBvcnQgSFRUUFNTZXJ2ZXIgZnJvbSBcIi4vY2xhc3Nlcy9odHRwc1NlcnZlclwiO1xuaW1wb3J0IFRva2VuTWFuYWdlciBmcm9tIFwiLi9jbGFzc2VzL3Rva2VuTWFuYWdlclwiO1xuLy8gaW1wb3J0IENhY2hlIGZyb20gXCIuL2NsYXNzZXMvY2FjaGVcIjtcbi8vIGltcG9ydCBEZXZpY2VNYW5hZ2VyIGZyb20gXCIuL2NsYXNzZXMvZGV2aWNlTWFuYWdlclwiO1xuLy8gaW1wb3J0IFBpbkNvbnRyb2wgZnJvbSBcIi4vY2xhc3Nlcy9waW5Db250cm9sXCI7XG5cbmltcG9ydCB7IEtlcm5lbCB9IGZyb20gXCJpbnZlcnNpZnlcIjtcblxuLyoqXG4gKiBCaW5kIGFsbCBjbGFzc2VzIHRvIHRoZWlyIHN0cmluZyBpZGVudGlmaWVycy5cbiAqL1xubGV0IGtlcm5lbCA9IG5ldyBLZXJuZWwoKTtcbmtlcm5lbC5iaW5kPElOVEVSRkFDRVMuSVNldHRpbmdzPihcIlNldHRpbmdzXCIpLnRvKFNldHRpbmdzKS5pblNpbmdsZXRvblNjb3BlKCk7XG5rZXJuZWwuYmluZDxJTlRFUkZBQ0VTLklMb2dnZXI+KFwiTG9nZ2VyXCIpLnRvKExvZ2dlcikuaW5TaW5nbGV0b25TY29wZSgpO1xua2VybmVsLmJpbmQ8SU5URVJGQUNFUy5JRXZlbnRTeXN0ZW0+KFwiRXZlbnRTeXN0ZW1cIikudG8oRXZlbnRTeXN0ZW0pXG4uaW5TaW5nbGV0b25TY29wZSgpO1xua2VybmVsLmJpbmQ8SU5URVJGQUNFUy5JU2NoZW1hPihcIlNjaGVtYXNcIikudG8oRGV2aWNlU2NoZW1hKTtcbmtlcm5lbC5iaW5kPElOVEVSRkFDRVMuSVNjaGVtYT4oXCJTY2hlbWFzXCIpLnRvKFVzZXJTY2hlbWEpO1xua2VybmVsLmJpbmQ8SU5URVJGQUNFUy5JRGF0YU1hbmFnZXI+KFwiRGF0YU1hbmFnZXJcIikudG8oRGF0YU1hbmFnZXIpXG4uaW5TaW5nbGV0b25TY29wZSgpO1xuXG4vKiBrZXJuZWwuYmluZDwoKSA9PiBJTlRFUkZBQ0VTLklDYWNoZT4oXCJGYWN0b3J5PENhY2hlPlwiKVxuLnRvRmFjdG9yeTxJTlRFUkZBQ0VTLklDYWNoZT4oKGNvbnRleHQpID0+IHtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICByZXR1cm4gY29udGV4dC5rZXJuZWwuZ2V0PElOVEVSRkFDRVMuSUNhY2hlPihcIkNhY2hlXCIpO1xuICAgIH07XG59KTtcbmtlcm5lbC5iaW5kPElOVEVSRkFDRVMuSUNhY2hlPihcIkNhY2hlXCIpLnRvKENhY2hlKTsgKi9cblxuLyoga2VybmVsLmJpbmQ8SU5URVJGQUNFUy5JRGV2aWNlTWFuYWdlcj4oXCJEZXZpY2VNYW5hZ2VyXCIpLnRvKERldmljZU1hbmFnZXIpXG4uaW5TaW5nbGV0b25TY29wZSgpOyAqL1xuXG5rZXJuZWwuYmluZDwoKSA9PiBJTlRFUkZBQ0VTLklDb250cm9sbGVyPihcIkZhY3Rvcnk8Q29udHJvbGxlcj5cIilcbi50b0ZhY3Rvcnk8SU5URVJGQUNFUy5JQ29udHJvbGxlcj4oKGNvbnRleHQpID0+IHtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICByZXR1cm4gY29udGV4dC5rZXJuZWwuZ2V0PElOVEVSRkFDRVMuSUNvbnRyb2xsZXI+KFwiQ29udHJvbGxlclwiKTtcbiAgICB9O1xufSk7XG5rZXJuZWwuYmluZDxJTlRFUkZBQ0VTLklDb250cm9sbGVyPihcIkNvbnRyb2xsZXJcIikudG8oQ29udHJvbGxlcik7XG5cbmtlcm5lbC5iaW5kPElOVEVSRkFDRVMuSVRva2VuTWFuYWdlcj4oXCJUb2tlbk1hbmFnZXJcIikudG8oVG9rZW5NYW5hZ2VyKVxuLmluU2luZ2xldG9uU2NvcGUoKTtcbmtlcm5lbC5iaW5kPElOVEVSRkFDRVMuSUNvbnRyb2xsZXJNYW5hZ2VyPihcIkNvbnRyb2xsZXJNYW5hZ2VyXCIpXG4udG8oQ29udHJvbGxlck1hbmFnZXIpLmluU2luZ2xldG9uU2NvcGUoKTtcbmtlcm5lbC5iaW5kPElOVEVSRkFDRVMuSUhUVFBTU2VydmVyPihcIkhUVFBTU2VydmVyXCIpLnRvKEhUVFBTU2VydmVyKVxuLmluU2luZ2xldG9uU2NvcGUoKTtcblxuZXhwb3J0IGRlZmF1bHQga2VybmVsO1xuIl19
